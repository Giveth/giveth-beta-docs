(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return d})),t.d(n,"default",(function(){return b}));var a=t(3),o=t(7),i=(t(0),t(98)),r={id:"delegation-from-community-flow",title:"Delegation to Community Flow"},l={unversionedId:"delegation-from-community-flow",id:"delegation-from-community-flow",isDocsHomePage:!1,title:"Delegation to Community Flow",description:"Below steps describes the money flow since it comes from home network to Giveth, until it goes to a Trace or",source:"@site/docs/doc6-delegation-from-community-flow.md",slug:"/delegation-from-community-flow",permalink:"/docs/delegation-from-community-flow",editUrl:"https://github.com/giveth/giveth-beta-docs/edit/master/docs/doc6-delegation-from-community-flow.md",version:"current",sidebar:"docsSidebar",previous:{title:"Paid Gas Calculation",permalink:"/docs/paid-gas-calculation"},next:{title:"Style Guide",permalink:"/docs/styleguide"}},d=[],c={rightToc:d};function b(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Below steps describes the money flow since it comes from home network to Giveth, until it goes to a Trace or\nCampaign:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"The User (call it ",Object(i.b)("strong",{parentName:"li"},"Donor"),") clicks on ",Object(i.b)("inlineCode",{parentName:"li"},"Donate")," button in some Community view and donates to the Community.")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"The MetaMask will show up and ",Object(i.b)("strong",{parentName:"li"},"Donor")," confirm the transaction to move money from the donor's wallet to Giveth\nbridge smart contract in Mainnet network")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"A new ",Object(i.b)("inlineCode",{parentName:"p"},"Pending")," donation (a donation with ",Object(i.b)("inlineCode",{parentName:"p"},"Pending")," status) record would be created in Feathers including this data"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"status: 'Pending'\nmined: false,\nownerType: 'giver',\nownerTypeId: <donor's address who donated to community>,\ndelegateType: 'community',\npledgeId: '0',\ndelegateTypeId: <community Id>,\namount: <donated amount>,\namountRemaining: <donated amount>'\n")),Object(i.b)("p",{parentName:"li"},"we call this donation ",Object(i.b)("inlineCode",{parentName:"p"},"donated")," donation in this document"))),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"Bridge Server")," will transfer money between networks, and some amount of tokens with equal value is minted for\nCommunity. Then, a ",Object(i.b)("inlineCode",{parentName:"p"},"Transfer")," event will be emitted and Rinkeby money is moved to a pledge (like bank account)"),Object(i.b)("h2",Object(a.a)({parentName:"li"},{id:"whose-owner-is-the-community-received-the-donation"}),"whose owner is the Community received the donation."),Object(i.b)("p",{parentName:"li"},"Feathers server processes the event and after the ",Object(i.b)("inlineCode",{parentName:"p"},"donated")," donation will be patched with this data:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"status: 'Waiting',\nmined: true,\npledgeId: <id of pledge money moved to> \n")),Object(i.b)("p",{parentName:"li"},"Now the money is ready to be delegated from the Community."))),Object(i.b)("ol",{start:5},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The Community owner goes to some project's (project can be either a ",Object(i.b)("inlineCode",{parentName:"p"},"Trace")," or  a ",Object(i.b)("inlineCode",{parentName:"p"},"Campaing"),") page and delegates money (we\ncall it ",Object(i.b)("inlineCode",{parentName:"p"},"delegatedMoney"),") from ",Object(i.b)("inlineCode",{parentName:"p"},"Community")," to the project."),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"A new donation object like below would be created (we call this ",Object(i.b)("inlineCode",{parentName:"li"},"delegated")," donation in this document):")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"status: 'ToApprove',\nmined: false,\nparentDonations: [ <the donated donation object id in mongo> ],\namount: <delegated amount>,\namountRemaining: <delesated amount>,\nownerTypeId: <donor address>,\npledgeId: '0',\nownerType: 'giver',\ndelegateId: <Community ID in smart contract projects>,\ndelegateTypeId: <Community object ID in mongo>,\nintendedProjectTypeId: <Project object ID in mongo>,\nintendedProjectId: <Project ID in smart contract>,\nintendedProjectType: <trace or campaign>\n")),Object(i.b)("ol",Object(a.a)({parentName:"li"},{start:2}),Object(i.b)("li",{parentName:"ol"},"To prevent double spending money from the parent donation (",Object(i.b)("inlineCode",{parentName:"li"},"donated")," donation ) a field ",Object(i.b)("inlineCode",{parentName:"li"},"pendingAmountRemaining"),"\nwould be added to parent donation:")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"amountRemaining: <new amountRemaining>\npendingAmountRemaining: <amountRemaining - delegatedMoney>\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Then after the transaction is mined, again a ",Object(i.b)("inlineCode",{parentName:"p"},"Transfer")," event would come to Feathers and the ",Object(i.b)("inlineCode",{parentName:"p"},"ToApprove")," donation's\n",Object(i.b)("inlineCode",{parentName:"p"},"mined")," become ",Object(i.b)("inlineCode",{parentName:"p"},"true"),", ",Object(i.b)("inlineCode",{parentName:"p"},"pldgeId")," would fill with project's pledgeId for the parent donation, the ",Object(i.b)("inlineCode",{parentName:"p"},"amountRemaining"),"\nwould replace with ",Object(i.b)("inlineCode",{parentName:"p"},"pendingAmountRemaining"),", and after that ",Object(i.b)("inlineCode",{parentName:"p"},"pendingAmountRemaining")," will be unset."))),Object(i.b)("ol",{start:7},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"In this step on ",Object(i.b)("inlineCode",{parentName:"p"},"/donations")," path, the ",Object(i.b)("inlineCode",{parentName:"p"},"Donor")," will see two buttons name ",Object(i.b)("inlineCode",{parentName:"p"},"Commit")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Reject")," behind the ",Object(i.b)("inlineCode",{parentName:"p"},"delegated"),"\ndonation item, if he/she clicks on ",Object(i.b)("inlineCode",{parentName:"p"},"Commit")," and sign the transaction:"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"for prevent the double spending, the ",Object(i.b)("inlineCode",{parentName:"li"},"delegated")," donation would be updated with ")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"pendingAmountRemaining: '0'\n")),Object(i.b)("ol",Object(a.a)({parentName:"li"},{start:2}),Object(i.b)("li",{parentName:"ol"},"A new donation will be created (we call this ",Object(i.b)("inlineCode",{parentName:"li"},"final")," donation in this document) including below data:")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"status: 'Committed',\nmined: false,\nparentDonations: [ <the delegated donation object id in mongo> ],\nisReturn: false,\nlessThanCutoff: false,\npledgeId: '0',\namount: <delegated amount>,\namountRemaining: <delegated amount>,\nownerTypeId: <Project ID in mongo>,\nownerType: <trace or campaign>,\ngiverAddress: <Donor address>,\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"After the transaction is mined a ",Object(i.b)("inlineCode",{parentName:"p"},"Transfer")," event comes to the Feathers server. Processing that events results in:"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"a ",Object(i.b)("inlineCode",{parentName:"li"},"delegated")," donation's ",Object(i.b)("inlineCode",{parentName:"li"},"amountRemaining")," will be replaced with its ",Object(i.b)("inlineCode",{parentName:"li"},"pendingamountRemaining"),"(was zero)\nso then the ",Object(i.b)("inlineCode",{parentName:"li"},"lessThanCuttoff")," for this donation will be changed to ",Object(i.b)("inlineCode",{parentName:"li"},"true")),Object(i.b)("li",{parentName:"ol"},"the ",Object(i.b)("inlineCode",{parentName:"li"},"final")," donation's ",Object(i.b)("inlineCode",{parentName:"li"},"mined")," field will become ",Object(i.b)("inlineCode",{parentName:"li"},"true"),", and ",Object(i.b)("inlineCode",{parentName:"li"},"pledgeId")," will fill with project's pledgeId. The\nmoney is ready for collect now.")))),Object(i.b)("ol",{start:9},Object(i.b)("li",{parentName:"ol"},"if in step ",Object(i.b)("inlineCode",{parentName:"li"},"7")," Donor clicks on ",Object(i.b)("inlineCode",{parentName:"li"},"Reject")," button and sign the transaction",Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"The ",Object(i.b)("inlineCode",{parentName:"li"},"donated")," donation's status will become ",Object(i.b)("inlineCode",{parentName:"li"},"Rejected")," and add ",Object(i.b)("inlineCode",{parentName:"li"},"pendingAmountRemaining: 0")),Object(i.b)("li",{parentName:"ol"},"A new donation will be created with including data (we call this ",Object(i.b)("inlineCode",{parentName:"li"},"returned")," donation in this document):")),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{})," status: 'ToApprove',\n mined: false,\n parentDonations: [ <the delegated donation object id in mongo> ],\n isReturn: true,// it's important, in this flow this the first donation with isReturn:true\n lessThanCutoff: false,\n amount: <delegated amount>,\n amountRemaining: <delegated amount>,\n ownerType: 'giver',\n giverAddress: <Donor address>,\n pledgeId: '0'\n")))),Object(i.b)("ol",{start:10},Object(i.b)("li",{parentName:"ol"},"After the transaction is mined, a ",Object(i.b)("inlineCode",{parentName:"li"},"Transfer")," event comes to Feathers server. The outcome of processing that event\nwill be:",Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"The ",Object(i.b)("inlineCode",{parentName:"li"},"amountRemaining")," of",Object(i.b)("inlineCode",{parentName:"li"},"delegated")," donation will be replaced by ",Object(i.b)("inlineCode",{parentName:"li"},"pendingAmountRemaining")," (zero)"),Object(i.b)("li",{parentName:"ol"},"The ",Object(i.b)("inlineCode",{parentName:"li"},"mined")," field in ",Object(i.b)("inlineCode",{parentName:"li"},"returned")," donation becomes ",Object(i.b)("inlineCode",{parentName:"li"},"true")," and the ",Object(i.b)("inlineCode",{parentName:"li"},"pledgeId")," would fill with new donation\n",Object(i.b)("inlineCode",{parentName:"li"},"pledgeId"),". The donation becomes ",Object(i.b)("inlineCode",{parentName:"li"},"Waiting")," now it's a ready donation for ",Object(i.b)("inlineCode",{parentName:"li"},"Donor")," to delegate it again")))))}b.isMDXComponent=!0},98:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return u}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),b=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=b(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},s=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),m=b(t),s=a,u=m["".concat(r,".").concat(s)]||m[s]||p[s]||i;return t?o.a.createElement(u,l(l({ref:n},c),{},{components:t})):o.a.createElement(u,l({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=s;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<i;c++)r[c]=t[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);